{
	"publisher": "theNestruo",
	"name": "z80-asm-meter",
	"displayName": "Z80 Assembly meter",
	"icon": "doc/images/icon.128.png",
	"description": "Z80 Assembly clock cycles and bytecode size meter",
	"version": "3.6.0",
	"engines": {
		"vscode": "^1.80.0"
	},
	"categories": [
		"Programming Languages"
	],
	"keywords": [
		"asm",
		"assembler",
		"assembly",
		"Zilog",
		"Z80",
		"Z80A",
		"Z80N",
		"Amstrad CPC",
		"CPC",
		"MSX",
		"ZX Spectrum",
		"ZX Spectrum Next"
	],
	"homepage": "https://github.com/theNestruo/z80-asm-meter-vscode",
	"bugs": {
		"url": "https://github.com/theNestruo/z80-asm-meter-vscode/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/theNestruo/z80-asm-meter-vscode.git"
	},
	"license": "LGPL-3.0",
	"activationEvents": [
		"onLanguage:asm-collection",
		"onLanguage:pasmo",
		"onLanguage:z80",
		"onLanguage:z80-asm",
		"onLanguage:z80-macroasm",
		"onLanguage:zeus-asm",
		"workspaceContains:**/*.{asm,ASM,c,C,inc,INC,s,S,z80,Z80}"
	],
	"main": "./out/extension.js",
	"contributes": {
		"languages": [
			{
				"id": "z80-asm-meter",
				"aliases": [
					"Z80 Assembly"
				]
			}
		],
		"configuration": {
			"title": "Z80 Assembly meter settings",
			"properties": {
				"z80-asm-meter.directivesAsInstructions": {
					"type": "string",
					"description": "Controls which directives should try to be parsed as single byte instructions",
					"enum": [
						"none",
						"defs"
					],
					"enumDescriptions": [
						"None; directives will be parsed as bytes",
						"Tries to parse DEFS directive bytes as single byte instructions"
					],
					"default": "defs"
				},
				"z80-asm-meter.languageIds": {
					"type": [
						"array",
						"null"
					],
					"description": "Additional language IDs for which the extension is enabled (such as \"c\" for in-lined assembly)",
					"default": [
						"asm-collection",
						"pasmo",
						"z80",
						"z80-asm",
						"z80-macroasm",
						"zeus-asm"
					]
				},
				"z80-asm-meter.macros": {
					"type": [
						"array",
						"null"
					],
					"description": "An array of user-defined macros",
					"default": [],
					"items": {
						"type": "object",
						"properties": {
							"name": {
								"type": "string",
								"description": "The name of the macro"
							},
							"z80": {
								"type": [
									"number",
									"string",
									"null"
								],
								"description": "Declares or overrides Z80 default macro timing for the",
								"default": null
							},
							"msx": {
								"type": [
									"number",
									"string",
									"null"
								],
								"description": "Declares or overrides Z80+M1 macro timing information (MSX standard)",
								"default": null
							},
							"cpc": {
								"type": [
									"number",
									"string",
									"null"
								],
								"description": "Declares or overrides macro timing measured in number of NOPs",
								"default": null
							},
							"size": {
								"type": [
									"number",
									"string",
									"null"
								],
								"description": "Declares or overrides macro byte count",
								"default": null
							},
							"instructions": {
								"type": [
									"array",
									"null"
								],
								"description": "The macro definition, as instructions",
								"default": null,
								"items": {
									"type": "string"
								}
							}
						}
					}
				},
				"z80-asm-meter.platform": {
					"type": "string",
					"description": "Controls the instruction set and the timing information",
					"enum": [
						"z80",
						"msx",
						"pc8000",
						"cpc",
						"z80n"
					],
					"enumDescriptions": [
						"Default Z80 instruction set and default timing information",
						"MSX: default Z80 instruction set and Z80+M1 timing information (MSX standard)",
						"NEC PC-8000 series: default Z80 instruction set and both default and Z80+M1 timing information",
						"Amstrad CPC: default Z80 instruction set and timing measured in number of NOPs",
						"ZX Spectrum Next Extended Z80 instruction set and default timing information"
					],
					"default": "z80"
				},
				"z80-asm-meter.sjasmplus": {
					"type": "boolean",
					"description": "Enables support for parsing SjASMPlus alternative syntax and fake instructions",
					"default": false
				},
				"z80-asm-meter.syntax.label": {
					"type": "string",
					"description": "Adjusts the label detection to match the syntax of the assembler",
					"enum": [
						"default",
						"colonOptional"
					],
					"enumDescriptions": [
						"The labels must be followed by a colon (:) and can be indented. This behaviour matches most assemblers and coding styles",
						"The trailing colon is optional, and the labels must not be indented. This behaviour matches some assemblers such as Pasmo and SjASMPlus"
					],
					"default": "default"
				},
				"z80-asm-meter.syntax.lineSeparator": {
					"type": "string",
					"description": "Adjusts the line separator to match the syntax of the assembler",
					"enum": [
						"none",
						"colon",
						"pipe"
					],
					"enumDescriptions": [
						"Does not allow multiple instructions on a single line",
						"Use colon (:) to have more than one instruction on a line",
						"Use pipe (|) to have more than one instruction on a line. This behaviour matches some assemblers such as tniASM"
					],
					"default": "none"
				},
				"z80-asm-meter.syntax.repeat": {
					"type": "string",
					"description": "Enables support for parsing repeat count",
					"enum": [
						"none",
						"brackets",
						"dot"
					],
					"enumDescriptions": [
						"Disables repeat count",
						"The repeat count is specified within square brackets ([ and ]) before the instruction",
						"The repeat count is specified after a dot (.) before the instruction"
					],
					"default": "none"
				},
				"z80-asm-meter.timings.atExit": {
					"type": "boolean",
					"description": "When enabled, if the selection ends with a jump or return operation, measures any previous conditional jump or return operation as not taken",
					"default": false
				},
				"z80-asm-meter.timings.hints": {
					"type": "string",
					"description": "Enables timing hints read from the line comment.",
					"enum": [
						"none",
						"subroutines",
						"any"
					],
					"enumDescriptions": [
						"Disables timing hints",
						"Subroutine timing hints will be added to CALL, JP, JR, or RST instructions",
						"Any timing hint will be added"
					],
					"default": "none"
				},
				"z80-asm-meter.viewBytes": {
					"type": "boolean",
					"description": "Enables the bytes (opcode) in the status bar",
					"default": false
				},
				"z80-asm-meter.viewInstruction": {
					"type": "boolean",
					"description": "Enables the processed instruction in the status bar. Useful to check if the extension is mistaking instructions",
					"default": true
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/vscode": "^1.80.0",
		"@types/glob": "^7.2.0",
		"@types/mocha": "^10.0.1",
		"@types/node": "20.x",
		"@typescript-eslint/eslint-plugin": "^6.2.1",
		"@typescript-eslint/parser": "^5.31.0",
		"eslint": "^8.20.0",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"typescript": "^5.1.6",
		"@vscode/test-electron": "^2.3.4"
	}
}
